// <auto-generated />
using System;
using BuildingShop.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuildingShop.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200608125352_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Сухі суміші"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Грунтовки"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Фарби"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Блоки будівельні"
                        });
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Amount = 50,
                            Date = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 101,
                            Amount = 60,
                            Date = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AverageSalesPerDay")
                        .HasColumnType("decimal(12, 4)");

                    b.Property<int>("DaysWithoutProduct")
                        .HasColumnType("int");

                    b.Property<int>("EndAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinalNumber")
                        .HasColumnType("int");

                    b.Property<int>("MinSalePerDay")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartingAmount")
                        .HasColumnType("int");

                    b.Property<int>("TotalIncome")
                        .HasColumnType("int");

                    b.Property<int>("TotalOutcome")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Сharacteristics")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 40,
                            CategoryId = 1,
                            Image = "https://cdn.27.ua/799/7b/62/1276770_2.jpeg",
                            Name = "Цемент IFCEM ПЦ II/БК-400 25 кг",
                            Price = 76.20m,
                            Сharacteristics = "{\"Бренд\":\"IFCEM\",\"Вага\":\"25 кг\",\"Тип\":\"шлакопортландцемент\",\"Марка\":\"М-400\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50,
                            CategoryId = 1,
                            Image = "https://cdn.27.ua/799/fd/48/326984_1.jpeg",
                            Name = "Цемент Dyckerhoff ПЦ II/А-Ш 500 25 кг",
                            Price = 85m,
                            Сharacteristics = "{\"Бренд\":\"Dyckerhoff\",\"Вага\":\"25 кг\",\"Тип\":\"портландцемент\",\"Марка\":\"М-500\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 35,
                            CategoryId = 1,
                            Image = "https://cdn.27.ua/799/fd/3b/326971_2.jpeg",
                            Name = "Цемент ПЦII/БК 400 25 кг",
                            Price = 71m,
                            Сharacteristics = "{\"Вага\":\"25 кг\",\"Тип\":\"портландцемент\",\"Марка\":\"М-400\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 33,
                            CategoryId = 1,
                            Image = "https://cdn.27.ua/799/b8/f0/1292528_2.jpeg",
                            Name = "Цемент білий OYAK 25 кг",
                            Price = 215m,
                            Сharacteristics = "{\"Бренд\":\"OYAK\",\"Вага\":\"25 кг\",\"Тип\":\"білий\",\"Марка\":\"М-600\",\"Країна-виробник\":\"Туреччина\"}"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 23,
                            CategoryId = 2,
                            Image = "https://cdn.27.ua/799/65/c4/550340_1.jpeg",
                            Name = "Ґрунт Farbex 1:4 глибокого проникнення SuperBase 1 л",
                            Price = 53.64m,
                            Сharacteristics = "{\"Бренд\":\"Farbex\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 46,
                            CategoryId = 2,
                            Image = "https://cdn.27.ua/799/47/bb/411579_4.jpeg",
                            Name = "Ґрунтовка фунгіцидна TR-25 bio 1 л",
                            Price = 50.28m,
                            Сharacteristics = "{\"Бренд\":\"Triora\",\"Тип\":\"фунгіцидна\",\"Колір\":\"прозорий\",\"Основа\":\"акрилова\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 21,
                            CategoryId = 2,
                            Image = "https://cdn.27.ua/799/2c/dd/1125597_1.jpeg",
                            Name = "Ґрунтовка глибокопроникна Farbex силіконова 2 л",
                            Price = 99.60m,
                            Сharacteristics = "{\"Бренд\":\"Farbex\",\"Призначення\":\"для внутрішніх робіт\",\"Основа\":\"силікон\",\"Колір\":\"прозорий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 20,
                            CategoryId = 2,
                            Image = "https://cdn.27.ua/799/cb/ce/314318_1.jpeg",
                            Name = "Ґрунтовка водовідштовхувальна Eskaro Aquastop Facade концентрат 1:10 1 л",
                            Price = 183.20m,
                            Сharacteristics = "{\"Бренд\":\"Eskaro\",\"Основа\":\"акрилова\",\"Тип\":\"водовідштовхувальна\",\"Колір\":\"білий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 30,
                            CategoryId = 3,
                            Image = "https://cdn.27.ua/799/4c/32/543794_3.jpeg",
                            Name = "Фарба Dufa Wandfarbe D1a білий 10 л 14 кг",
                            Price = 305.50m,
                            Сharacteristics = "{\"Бренд\":\"Dufa\",\"Призначення\":\"штукатурка, ДСП, ДВП, МДФ, цегла, шпалери, гіпсокартон\",\"Тип\":\"акрилова, водоемульсійна\",\"Відтінок\":\"білий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 32,
                            CategoryId = 3,
                            Image = "https://cdn.27.ua/799/68/49/26697_3.jpeg",
                            Name = "Фарба Sniezka Ultra Biel білий 10 л 14 кг",
                            Price = 262.70m,
                            Сharacteristics = "{\"Бренд\":\"Sniezka\",\"Призначення\":\"для стін, для стелі\",\"Тип\":\"акрилова, водоемульсійна\",\"Відтінок\":\"білий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 50,
                            CategoryId = 3,
                            Image = "https://cdn.27.ua/799/f8/0c/522252_3.jpeg",
                            Name = "Фарба Dufa Mattlatex D100 білий 10 л 14 кг",
                            Price = 617.60m,
                            Сharacteristics = "{\"Бренд\":\"Dufa\",\"Призначення\":\"для стін, для стелі\",\"Тип\":\"латексна, водоемульсійна\",\"Відтінок\":\"білий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 12,
                            Amount = 60,
                            CategoryId = 3,
                            Image = "https://cdn.27.ua/799/47/9b/411547_4.jpeg",
                            Name = "Фарба Triora TR-33 matt білий 10 л",
                            Price = 910.50m,
                            Сharacteristics = "{\"Бренд\":\"Triora\",\"Призначення\":\"для стін, для стелі\",\"Тип\":\"латексна, водоемульсійна\",\"Відтінок\":\"білий\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 13,
                            Amount = 52,
                            CategoryId = 4,
                            Image = "https://cdn.27.ua/799/d6/34/1168948_2.jpeg",
                            Name = "Газобетонний блок BauGut 600x200x300 мм D-500",
                            Price = 61.30m,
                            Сharacteristics = "{\"Бренд\":\"BauGut\",\"Призначення\":\"стіновий\",\"Марка міцності\":\"D-500\",\"Морозостійкість\":\"F-35\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 14,
                            Amount = 100,
                            CategoryId = 4,
                            Image = "https://cdn.27.ua/799/7c/c7/31943_2.jpeg",
                            Name = "Блок бетонний Фратеко 500х200х200 мм",
                            Price = 25.50m,
                            Сharacteristics = "{\"Бренд\":\"Фратеко\",\"Водопоглинання\":\"9%\",\"Пустотність\":\"30%\",\"Морозостійкість\":\"50\",\"Країна-виробник\":\"Україна\"}"
                        },
                        new
                        {
                            Id = 15,
                            Amount = 115,
                            CategoryId = 4,
                            Image = "https://cdn.27.ua/799/87/d3/1279955_2.jpeg",
                            Name = "Блок бетонний М-50",
                            Price = 30m,
                            Сharacteristics = "{\"Вид\":\"блок бетонний\",\"Призначення\":\"стіновий\",\"Торцева грань\":\"гладка\",\"Країна виробник\":\"Україна\",\"Вага\":\"11,5 кг\"}"
                        },
                        new
                        {
                            Id = 16,
                            Amount = 75,
                            CategoryId = 4,
                            Image = "https://cdn.27.ua/799/87/f4/1279988_2.jpeg",
                            Name = "Блок керамічний ЗБК 45",
                            Price = 48m,
                            Сharacteristics = "{\"Бренд\":\"3БК\",\"Призначення\":\"стіновий\",\"Вид\":\"блок керамічний 35\",\"Торцева грань\":\"паз-гребінь\",\"Країна-виробник\":\"Україна\"}"
                        });
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.ProductAmountTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAmountTrackers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 60,
                            Date = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50,
                            Date = new DateTime(2020, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30,
                            Date = new DateTime(2020, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 14,
                            Date = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 5,
                            Amount = 0,
                            Date = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 50,
                            Date = new DateTime(2020, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 38,
                            Date = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 23,
                            Date = new DateTime(2020, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 9,
                            Date = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            Amount = 60,
                            Date = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 11,
                            Amount = 35,
                            Date = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Amount = 20,
                            Date = new DateTime(2020, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 101,
                            Amount = 16,
                            Date = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 102,
                            Amount = 14,
                            Date = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 103,
                            Amount = 12,
                            Date = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 104,
                            Amount = 15,
                            Date = new DateTime(2020, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 105,
                            Amount = 14,
                            Date = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 106,
                            Amount = 9,
                            Date = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        },
                        new
                        {
                            Id = 107,
                            Amount = 25,
                            Date = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.ShopCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShopCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopCartItems");
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Delivery", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Order", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Product", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.ProductAmountTracker", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.Purchase", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingShop.Domain.DomainObjects.ShopCartItem", b =>
                {
                    b.HasOne("BuildingShop.Domain.DomainObjects.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
